#!/bin/bash

PREFIX="/usr/local/qate"


function bctl_init() {

  apt-get install libasio-dev libcurl4-openssl-dev
  git clone https://github.com/quotekio/rapidjson
  git clone https://github.com/quotekio/rapidxml
  git clone https://github.com/quotekio/websocketpp

  cp -r rapidjson/include/rapidjson /usr/include/
  cp -r rapidxml /usr/include/

  pushd websocketpp
  cmake .
  make && make install
  popd  

}


function bctl_cleanup() {
  make clean
  if  [ -f install_manifest.txt ] ;then
    rm install_manifest.txt
  fi

  rm CMakeCache.txt
  rm -rf CMakeFiles
  rm cmake_install.cmake
  rm Makefile
  rm tests/test_*
  rm tests/CMakeCache.txt
  rm tests/cmake_install.cmake
  rm -rf tests/CMakeFiles
  
  rm install/compile/headers/*.h

  sdk_cleanup

}

function sdk_cleanup() {
  cd sdk
  ./clean.sh
  cd ..
}


#function bctl_package_SDK() {
#
#}

#function bctl_install_SDK() {
#
#}

function bctl_cmake() {
  cmake -DCMAKE_INSTALL_PREFIX=$PREFIX .
}

function bctl_compile() {
  make -j3
}

function bctl_compile_all() {
  cd sdk
  cmake . && make -j3
  make install
  cd ..
  make -j3
}

#function bctl_release() {
#}

function bctl_append_buildnum() {

  bnum=`cat .buildctl|grep build_number|sed 's/build_number//'`
  bnum=`expr $bnum + 1`

  echo "Running build number $bnum"
  sed "s/##BNUM##/$bnum/" src/lib/version.h.tpl > src/lib/version.h

  sed "s/^build_number.*$/build_number $bnum/" -i .buildctl
  
}


function bctl_install() {
  make install
}

if [ $# -ge 2 ]
then
  PREFIX=$2
fi

case $1 in

  init)
    bctl_init
  ;;

  cleanup)
    bctl_cleanup
  ;;

  buildall)
    bctl_append_buildnum
    bctl_cmake
    bctl_compile_all
    #bctl_release
    #bctl_install_SDK
    #bctl_package_SDK
  ;;

  buildall-debug)
    bctl_append_buildnum
    bctl_cmake
    bctl_compile_all

    #bctl_release
    #bctl_install_SDK
    #bctl_package_SDK
  ;;
  

  install)
    bctl_install
    if [ $# -ge 3 ]
    then
      tar -xvzf $3 -C$2
    fi
  ;;

esac
